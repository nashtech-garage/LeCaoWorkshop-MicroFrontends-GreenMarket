version: "3.4"

services:
  angular-apps-checkout-app:
    image: mf-angular-apps-checkout-app
    build:
      context: .
      dockerfile: ./angular-apps/checkout-app/Dockerfile
    restart: on-failure
    ports:
      - "4001:80"

  angular-apps-common-header-app:
    image: mf-angular-apps-common-header-app
    build:
      context: .
      dockerfile: ./angular-apps/common-header-app/Dockerfile
    restart: on-failure
    ports:
      - "5001:80"

  angular-apps-contact-form-app:
    image: mf-angular-apps-contact-form-app
    build:
      context: .
      dockerfile: ./angular-apps/contact-form-app/Dockerfile
    restart: on-failure
    ports:
      - "6003:80"

  angular-apps-main-categories-app:
    image: mf-angular-apps-main-categories-app
    build:
      context: .
      dockerfile: ./angular-apps/main-categories-app/Dockerfile
    restart: on-failure
    ports:
      - "9002:80"

  angular-apps-shopping-cart-page-app:
    image: mf-angular-shopping-cart-page-app
    build:
      context: .
      dockerfile: ./angular-apps/shopping-cart-page-app/Dockerfile
    restart: on-failure
    ports:
      - "3001:80"

  react-apps-common-contact-app:
    image: mf-react-apps-common-contact-app
    build:
      context: .
      dockerfile: ./react-apps/common-contact-app/Dockerfile
    restart: on-failure
    ports:
      - "6001:80"

  react-apps-common-footer-app:
    image: mf-react-apps-common-footer-app
    build:
      context: .
      dockerfile: ./react-apps/common-footer-app/Dockerfile
    restart: on-failure
    ports:
      - "5005:80"

  react-apps-common-hero-search-app:
    image: mf-react-apps-common-hero-search-app
    build:
      context: .
      dockerfile: ./react-apps/common-hero-search-app/Dockerfile
    restart: on-failure
    ports:
      - "5003:80"

  react-apps-main-featured-product-app:
    image: mf-react-apps-main-featured-product-app
    build:
      context: .
      dockerfile: ./react-apps/main-featured-product-app/Dockerfile
    restart: on-failure
    ports:
      - "9003:80"

  react-apps-main-page-hero-banner-app:
    image: mf-react-apps-main-page-hero-banner-app
    build:
      context: .
      dockerfile: ./react-apps/react-main-page-hero-banner-app/Dockerfile
    restart: on-failure
    ports:
      - "9001:80"

  react-apps-shop-page-product-detail-app:
    image: mf-react-apps-shop-page-product-detail-app
    build:
      context: .
      dockerfile: ./react-apps/react-shop-page-product-detail-app/Dockerfile
    restart: on-failure
    ports:
      - "9006:80"

  vue-apps-contact-map-app:
    image: mf-vue-apps-contact-map-app
    build:
      context: .
      dockerfile: ./vue-apps/contact-map-app/Dockerfile
    restart: on-failure
    ports:
      - "6002:80"

  vue-apps-mainpage-blog-app:
    image: mf-vue-apps-mainpage-blog-app
    build:
      context: .
      dockerfile: ./vue-apps/mainpage-blog-app/Dockerfile
    restart: on-failure
    ports:
      - "9005:80"

  vue-apps-related-item-app:
    image: mf-vue-apps-related-item-app
    build:
      context: .
      dockerfile: ./vue-apps/related-item-app/Dockerfile
    restart: on-failure
    ports:
      - "2002:80"

  vue-apps-shop-page-products-grid-app:
    image: mf-vue-apps-shop-page-products-grid-app
    build:
      context: .
      dockerfile: ./vue-apps/vue-shop-page-products-grid-app/Dockerfile
    restart: on-failure
    ports:
      - "1001:80"

  common-app:
    image: mf-common-app
    build:
      context: .
      dockerfile: ./common-app/Dockerfile
    restart: on-failure
    ports:
      - "5000:80"

  root-config:
    image: mf-root-config
    build:
      context: .
      dockerfile: ./root-config/Dockerfile
    restart: on-failure
    ports:
      - "9000:80"

  green-market-api:
  image: green-market-api
  build:
    context: .
    dockerfile: ./green-market-api/Dockerfile
  restart: on-failure
  ports:
    - "8999:80"
  networks:
    - app-network

  orderdb:
    image: mysql:5.7.22
    container_name: orderdb-green-market-api
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: greenmarket
      MYSQL_ROOT_PASSWORD: 123456
      SERVICE_NAME: mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
